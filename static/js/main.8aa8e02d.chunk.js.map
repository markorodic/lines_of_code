{"version":3,"sources":["interface/Interface.module.css","interface/header/Header.module.css","assets/logo.svg","assets/restart_icon.svg","assets/play_icon.svg","assets/finish_icon.svg","assets/email_icon.svg","interface/gesturePad/gestureInput/GestureInput.module.css","interface/gesturePad/gestureInput/gestureView/GestureView.module.css","sharedCustomHooks.js","interface/Interface.actions.js","interface/Interface.reducer.js","interface/Interface.gestureContext.js","interface/Interface.countContext.js","interface/Interface.customHooks.js","interface/header/RenderGestureIcons.js","interface/header/HeaderHelpers.js","interface/mixpanel.js","interface/header/taskButton/emailQuestions/EmailQuestions.js","interface/header/taskButton/TaskButton.js","interface/header/Header.js","interface/header/Header.customHooks.js","interface/code/Code.commands.js","interface/code/codeEditor/CodeEditor.helpers.js","interface/code/codeEditor/codeText.js","interface/code/codeEditor/codeView/CodeView.js","interface/code/codeEditor/CodeEditor.js","interface/code/Code.customHooks.js","interface/code/Code.utils.js","interface/CONSTANTS.js","interface/gesturePad/gestureInput/GestureInputHelpers.js","interface/gesturePad/gestureInput/gestureView/GestureViewHelpers.js","interface/gesturePad/gestureInput/gestureView/GestureView.js","interface/gesturePad/gestureInput/gestureView/GestureView.customHooks.js","interface/gesturePad/gestureInput/gestureView/gestureViewGrid/GestureViewGrid.js","interface/gesturePad/gestureInput/gestureView/GestureViewRenderHelpers.js","interface/gesturePad/gestureInput/GestureInput.js","interface/gesturesPatterns/editPatterns.js","interface/gesturesPatterns/gesturePatterns.js","interface/gesturesPatterns/writePatterns.js","interface/gesturePad/GesturePad.helpers.js","interface/gesturePad/GesturePad.js","interface/Interface.js","App.js","utils.js","serviceWorker.js","index.js"],"names":["module","exports","interface","bg-logo","view","sidebar","cavnas","header","icons","canvas","__webpack_require__","p","gesture-input","useContainerProperties","GestureInputElement","_React$useState","React","useState","x","y","width","height","_React$useState2","Object","slicedToArray","containerProperties","setContainerProperties","useEffect","_getElementProperties","current","getBoundingClientRect","SET_GESTURE","ADD_COMBINATION","SET_MODE","GESTURE_ACTIVE","GESTURE_INACTIVE","USER_ACTIVE","USER_INACTIVE","RESET_CODE_TEXT","SET_CODE_STATE","InterfaceReducer","state","action","type","objectSpread","gesture","combination","pattern","mode","gestureActive","userActive","resetCodeText","codeState","newState","Error","InterfaceGestureStateContext","createContext","InterfaceGestureDispatchContext","initialState","InterfaceGestureProvider","_ref","children","_React$useReducer","useReducer","_React$useReducer2","dispatch","react_default","a","createElement","Provider","value","InterfaceCountStateContext","InterfaceCountProvider","count","setCount","useAnimationFrame","callback","callbackRef","useRef","loop","frameRef","requestAnimationFrame","cb","useLayoutEffect","cancelAnimationFrame","useInterfaceGestureState","context","useContext","undefined","useInterfaceGestureDispatch","setUserActive","setUserInactive","setGestureActive","setGestureInactive","setGesture","setMode","addCombination","setResetCodeText","newCodeText","setCodeState","renderGestureIcon","ctx","marginX","marginY","boxWidth","mid","beginPath","moveTo","lineTo","name","lineWidth","fillStyle","strokeStyle","stroke","font","fillText","displayOperatorPatterns","containerWidth","clearRect","clearCanvas","_ref2","marginSide","marginBox","widthBox","drawSinglePatternGrid","drawPatterns","_getWidthProportions","sideMargins","patternIconRatios","boxMargins","ratio","getTotalWidthRatio","getWidthProportions","getDimensions","verticleMargins","lineDistance","fillRect","drawHorizontalLines","drawVerticleLines","mixpanel","init","Mixpanel","identify","id","alias","track","props","time_event","people","set","question","one","two","three","four","five","six","seven","ten","TaskButton","time","setTime","onClick","duration","Date","getTime","src","playIcon","alt","durationInSeconds","Math","floor","Duration","restartIcon","finishIcon","href","concat","emailIcon","Header","HeaderElement","canvasElement","_useInterfaceGestureS","_useInterfaceGestureD","setCtx","getContext","useCreateCanvasContext","className","styles","ref","taskButton_TaskButton","setCursor","editor","lineNumber","line","ch","showRelativeLines","cm","lineNum","getCursor","curLineNum","setOption","l","abs","markGutter","clearGutter","setGutterMarker","marker","document","innerHTML","classList","add","makeMarker","markText","cursorPosition","command","clearMarks","readOnly","markCursor","_ref3","_ref4","getLine","lastCh","length","markLine","getAllMarks","clear","instructionsText","initialCodeText","finalCodeState","taskCompleteCodeText","CodeView","setEditor","editorText","textToDisplay","setValue","react_codemirror2","options","lineNumbers","autofocus","lineWrapping","gutters","onChange","editorDidMount","CodeEditor","characterPosition","setCursorPosition","motionHasFinished","_getCursorPosition","getCursorPosition","useCursorPosition","clipboard","_React$useState3","_React$useState4","clipBoard","setClipBoard","lineContent","useClipboard","execCommand","executeMotionCommand","replaceSelection","executeOperationCommand","on","relativeLinesOn","markGutterIcon","getValue","codeView_CodeView","NUMBER_OF_BOXES","X","Y","GestureIdleTimeInMs","MAX_PATH_LENGTH","positionItem","position","timeAdded","expired","getGridPosition","event","container","userPosition","boxHeight","gridPosition","documentPosition","containerX","containerY","getUserPosition","clientX","clientY","changedTouches","getDocumentPositionFrom","renderCurrentBox","GestureView","expiringPositions","lastMatchedGesture","renderBG","renderGrid","countX","countY","renderGridPoints","guidePoints","push","forEach","point","renderGiridPointGuides","index","prevDirection","path","direction","gestureLength","nextDirection","startPoint","centerPoint","endPoint","getBoxPointFromPreviousDirection","getBoxPointFromCurrentDirection","positionIsLast","renderInnerLine","renderMatchedPattern","box","diff","alphaValue","renderExpiredBoxes","style","GestureInput","updateGestureState","setPosition","setExpiringPositions","_React$useState5","_React$useState6","setPattern","_React$useState7","_React$useState8","timer","setTimer","useInterfaceCountState","onGesture","preventDefault","newPosition","currentPosition","_","isEqual","gridPositionHasChanged","toConsumableArray","dispatchCallBack","clearTimeout","setTimeout","ifInputIsIdle","onGestureEnd","onMouseMove","onMouseLeave","onTouchMove","onTouchEnd","validGestures","edit","operator","delete","normalisedPositions","yank","change","paste","cut","names","all","motion","next","previous","up","down","object","allTypes","allPaths","trimPattern","slice","gestureComboMatched","gestureMatched","trimmedPattern","stringPath","firstPosition","secondPosition","getDirectionsFrom","patternLength","trim","getPathFrom","gestureType","find","array","pathTrimmed","GesturePad","lastPattern","setLastPattern","setLastMatchedGesture","isEmpty","userHasBeenActive","input","getNewPattern","Interface","logo","header_Header","codeEditor_CodeEditor","gesturePad_GesturePad","App","vh","window","innerHeight","documentElement","setProperty","setCSSCustomProperty","addEventListener","passive","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8aa8e02d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"interface\":\"Interface_interface__2Aumt\",\"bg-logo\":\"Interface_bg-logo__FxK98\",\"view\":\"Interface_view__B3U1k\",\"sidebar\":\"Interface_sidebar__2qVG5\",\"cavnas\":\"Interface_cavnas__1h_Xo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Zlon\",\"icons\":\"Header_icons__2FUeU\",\"canvas\":\"Header_canvas__NRzl0\"};","module.exports = __webpack_public_path__ + \"static/media/logo.94789afc.svg\";","module.exports = __webpack_public_path__ + \"static/media/restart_icon.2dc9d234.svg\";","module.exports = __webpack_public_path__ + \"static/media/play_icon.27e32e39.svg\";","module.exports = __webpack_public_path__ + \"static/media/finish_icon.57b20b38.svg\";","module.exports = __webpack_public_path__ + \"static/media/email_icon.2c2f527a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gesture-input\":\"GestureInput_gesture-input__8qE7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"GestureView_canvas__3Bip2\"};","import React from \"react\";\n\nexport function getElementProperties(element) {\n  return element.current.getBoundingClientRect();\n}\n\nexport function useContainerProperties(GestureInputElement) {\n  const [containerProperties, setContainerProperties] = React.useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  React.useEffect(() => {\n    const { x, y, width, height } = getElementProperties(GestureInputElement);\n    setContainerProperties({\n      x,\n      y,\n      width,\n      height\n    });\n  }, [GestureInputElement]);\n  return containerProperties;\n}\n","export const SET_GESTURE = \"SET_GESTURE\";\nexport const ADD_COMBINATION = \"ADD_COMBINATION\";\nexport const SET_MODE = \"SET_MODE\";\nexport const GESTURE_ACTIVE = \"GESTURE_ACTIVE\";\nexport const GESTURE_INACTIVE = \"GESTURE_INACTIVE\";\nexport const USER_ACTIVE = \"USER_ACTIVE\";\nexport const USER_INACTIVE = \"USER_INACTIVE\";\nexport const RESET_CODE_TEXT = \"RESET_CODE_TEXT\";\nexport const SET_CODE_STATE = \"SET_CODE_STATE\";\n","import {\n  SET_GESTURE,\n  ADD_COMBINATION,\n  SET_MODE,\n  GESTURE_ACTIVE,\n  GESTURE_INACTIVE,\n  USER_ACTIVE,\n  USER_INACTIVE,\n  RESET_CODE_TEXT,\n  SET_CODE_STATE\n} from \"./Interface.actions\";\n\nexport default function InterfaceReducer(state, action) {\n  switch (action.type) {\n    case SET_GESTURE:\n      return { ...state, gesture: action.gesture };\n    case ADD_COMBINATION:\n      return { ...state, combination: action.pattern };\n    case SET_MODE:\n      return { ...state, mode: action.mode };\n    case GESTURE_ACTIVE:\n      return { ...state, gestureActive: true };\n    case GESTURE_INACTIVE:\n      return { ...state, gestureActive: false };\n    case USER_ACTIVE:\n      return { ...state, userActive: true };\n    case USER_INACTIVE:\n      return { ...state, userActive: false };\n    case RESET_CODE_TEXT:\n      return { ...state, resetCodeText: !state.resetCodeText };\n    case SET_CODE_STATE:\n      return { ...state, codeState: action.newState };\n    default:\n      throw new Error();\n  }\n}\n","import React from \"react\";\nimport InterfaceReducer from \"./Interface.reducer\";\n\nconst InterfaceGestureStateContext = React.createContext();\nconst InterfaceGestureDispatchContext = React.createContext();\n\nconst initialState = {\n  gesture: {},\n  combination: [],\n  mode: \"Inactive\",\n  userActive: false,\n  gestureActive: false,\n  resetCodeText: false,\n  codeState: \"Instructions\"\n};\n\nfunction InterfaceGestureProvider({ children }) {\n  const [state, dispatch] = React.useReducer(InterfaceReducer, initialState);\n\n  return (\n    <InterfaceGestureStateContext.Provider value={state}>\n      <InterfaceGestureDispatchContext.Provider value={dispatch}>\n        {children}\n      </InterfaceGestureDispatchContext.Provider>\n    </InterfaceGestureStateContext.Provider>\n  );\n}\n\nexport {\n  InterfaceGestureProvider,\n  InterfaceGestureStateContext,\n  InterfaceGestureDispatchContext\n};\n","import React from \"react\";\nimport { useAnimationFrame } from \"./Interface.customHooks\";\n\nconst InterfaceCountStateContext = React.createContext();\n\nfunction InterfaceCountProvider({ children }) {\n  const [count, setCount] = React.useState(0);\n\n  // this is causing entire app to rerender on every tick\n  useAnimationFrame(() => {\n    setCount(count => count + 1);\n  });\n\n  return (\n    <InterfaceCountStateContext.Provider value={count}>\n      {children}\n    </InterfaceCountStateContext.Provider>\n  );\n}\n\nexport { InterfaceCountProvider, InterfaceCountStateContext };\n","import React from \"react\";\nimport {\n  InterfaceGestureStateContext,\n  InterfaceGestureDispatchContext\n} from \"./Interface.gestureContext\";\nimport { InterfaceCountStateContext } from \"./Interface.countContext\";\nimport {\n  SET_GESTURE,\n  ADD_COMBINATION,\n  USER_ACTIVE,\n  USER_INACTIVE,\n  GESTURE_ACTIVE,\n  GESTURE_INACTIVE,\n  SET_MODE,\n  RESET_CODE_TEXT,\n  SET_CODE_STATE\n} from \"./Interface.actions\";\n\nexport const useAnimationFrame = callback => {\n  const callbackRef = React.useRef(callback);\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n  const loop = () => {\n    frameRef.current = requestAnimationFrame(loop);\n    const cb = callbackRef.current;\n    cb();\n  };\n  const frameRef = React.useRef();\n  React.useLayoutEffect(() => {\n    frameRef.current = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frameRef.current);\n  }, []);\n};\n\nexport function useInterfaceGestureState() {\n  const context = React.useContext(InterfaceGestureStateContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useInterfaceState must be used within a InterfaceProvider\"\n    );\n  }\n  return context;\n}\n\nexport function useInterfaceGestureDispatch() {\n  const dispatch = React.useContext(InterfaceGestureDispatchContext);\n  if (dispatch === undefined) {\n    throw new Error(\n      \"useInterfaceDispatch must be used within a InterfaceProvider\"\n    );\n  }\n  const setUserActive = () => dispatch({ type: USER_ACTIVE });\n  const setUserInactive = () => dispatch({ type: USER_INACTIVE });\n  const setGestureActive = () => dispatch({ type: GESTURE_ACTIVE });\n  const setGestureInactive = () => dispatch({ type: GESTURE_INACTIVE });\n  const setGesture = gesture => dispatch({ type: SET_GESTURE, gesture });\n  const addCombination = pattern =>\n    dispatch({ type: ADD_COMBINATION, pattern });\n  const setMode = mode => dispatch({ type: SET_MODE, mode });\n  const setResetCodeText = newCodeText =>\n    dispatch({ type: RESET_CODE_TEXT, newCodeText });\n  const setCodeState = newState => dispatch({ type: SET_CODE_STATE, newState });\n\n  return {\n    setUserActive,\n    setUserInactive,\n    setGestureActive,\n    setGestureInactive,\n    setGesture,\n    setMode,\n    addCombination,\n    setResetCodeText,\n    setCodeState\n  };\n}\n\nexport function useInterfaceCountState() {\n  const context = React.useContext(InterfaceCountStateContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useInterfaceGestureState must be used within a InterfaceProvider\"\n    );\n  }\n  return context;\n}\n","export function renderGestureIcon(\n  ctx,\n  marginX,\n  marginY,\n  boxWidth,\n  count,\n  gesture\n) {\n  marginX += 0.5;\n  marginY += 0.5;\n  const mid = boxWidth / 6;\n  ctx.beginPath();\n  switch (count) {\n    // case 0:\n    //   ctx.moveTo(marginX + mid * 3, marginY + mid * 5);\n    //   ctx.lineTo(marginX + mid * 3, marginY + mid * 1);\n    //   ctx.lineTo(marginX + mid * 5, marginY + mid * 1);\n    //   ctx.lineWidth = 1;\n    //   if (gesture.name === \"insert\") {\n    //     ctx.fillStyle = \"red\";\n    //     ctx.strokeStyle = \"red\";\n    //   } else {\n    //     ctx.fillStyle = \"white\";\n    //     ctx.strokeStyle = \"white\";\n    //   }\n    //   ctx.stroke();\n    //   ctx.font = \"lighter 8px Futura\";\n    //   ctx.fillText(\"INSERT\", marginX, marginY + mid * 8);\n    //   break;\n    case 0:\n      ctx.moveTo(marginX + mid, marginY + mid * 5);\n      ctx.lineTo(marginX + mid * 5, marginY + mid * 5);\n      ctx.lineTo(marginX + mid * 5, marginY + mid * 3);\n      if (gesture.name === \"delete\") {\n        ctx.lineWidth = 2;\n        ctx.fillStyle = \"#FC5081\";\n        ctx.strokeStyle = \"#FC5081\";\n      } else {\n        ctx.lineWidth = 1;\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"white\";\n      }\n      ctx.stroke();\n      ctx.font = \"lighter 8px Futura\";\n      ctx.fillText(\"DELETE\", marginX, marginY + mid * 8);\n      break;\n    case 1:\n      ctx.moveTo(marginX + mid * 3, marginY + mid * 1);\n      ctx.lineTo(marginX + mid * 1, marginY + mid * 1);\n      ctx.lineTo(marginX + mid * 1, marginY + mid * 5);\n      ctx.lineTo(marginX + mid * 3, marginY + mid * 5);\n      if (gesture.name === \"copy\") {\n        ctx.lineWidth = 2;\n        ctx.fillStyle = \"#5CB290\";\n        ctx.strokeStyle = \"#5CB290\";\n      } else {\n        ctx.lineWidth = 1;\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"white\";\n      }\n      ctx.stroke();\n      ctx.font = \"lighter 8px Futura\";\n      ctx.fillText(\"COPY\", marginX, marginY + mid * 8);\n      break;\n    case 2:\n      ctx.moveTo(marginX + mid * 3, marginY + mid * 5);\n      ctx.lineTo(marginX + mid * 3, marginY + mid * 1);\n      ctx.lineTo(marginX + mid * 5, marginY + mid * 1);\n      ctx.lineTo(marginX + mid * 5, marginY + mid * 3);\n      if (gesture.name === \"paste\") {\n        ctx.lineWidth = 2;\n        ctx.fillStyle = \"#FEDD32\";\n        ctx.strokeStyle = \"#FEDD32\";\n      } else {\n        ctx.lineWidth = 1;\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"white\";\n      }\n      ctx.stroke();\n      ctx.font = \"lighter 8px Futura\";\n      ctx.fillText(\"PASTE\", marginX, marginY + mid * 8);\n      break;\n    case 3:\n      ctx.moveTo(marginX + mid * 1, marginY + mid * 3);\n      ctx.lineTo(marginX + mid * 1, marginY + mid * 5);\n      ctx.lineTo(marginX + mid * 5, marginY + mid * 5);\n      ctx.lineTo(marginX + mid * 5, marginY + mid * 3);\n      if (gesture.name === \"cut\") {\n        ctx.lineWidth = 2;\n        ctx.fillStyle = \"#A56FA3\";\n        ctx.strokeStyle = \"#A56FA3\";\n      } else {\n        ctx.lineWidth = 1;\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"white\";\n      }\n      ctx.stroke();\n      ctx.font = \"lighter 8px Futura\";\n      ctx.fillText(\"CUT\", marginX, marginY + mid * 8);\n      break;\n    // case 5:\n    //   ctx.moveTo(marginX + mid * 1, marginY + mid * 3);\n    //   ctx.lineTo(marginX + mid * 1, marginY + mid * 5);\n    //   ctx.lineTo(marginX + mid * 5, marginY + mid * 5);\n    //   ctx.lineTo(marginX + mid * 5, marginY + mid * 1);\n    //   ctx.lineTo(marginX + mid * 3, marginY + mid * 1);\n    //   ctx.lineWidth = 1;\n    //   if (gesture.name === \"change\") {\n    //     ctx.fillStyle = \"#4E8DC4\";\n    //     ctx.strokeStyle = \"#4E8DC4\";\n    //   } else {\n    //     ctx.fillStyle = \"white\";\n    //     ctx.strokeStyle = \"white\";\n    //   }\n    //   ctx.stroke();\n    //   ctx.font = \"lighter 8px Futura\";\n    //   ctx.fillText(\"CHANGE\", marginX, marginY + mid * 8);\n    //   break;\n    default:\n      return;\n  }\n}\n","import { renderGestureIcon } from \"./RenderGestureIcons\";\n\n// TODO: Needs to be refactored\n\nexport function clearCanvas(ctx, containerWidth) {\n  if (ctx) {\n    ctx.clearRect(0, 0, containerWidth, containerWidth);\n  }\n}\n\nexport function displayOperatorPatterns(ctx, { width }, gesture, userActive) {\n  clearCanvas(ctx, width);\n  if (userActive) {\n    const dimensions = getDimensions(width);\n    drawPatterns(ctx, dimensions, gesture);\n  }\n}\n\nfunction getDimensions(containerWidth) {\n  let marginSide, marginBox, widthBox;\n  if (containerWidth > 900) {\n    marginSide = 10;\n    marginBox = 15;\n    widthBox = 35;\n  } else {\n    const { sideMargins, boxMargins, boxWidth } = getWidthProportions(\n      containerWidth\n    );\n    marginSide = sideMargins;\n    marginSide = 10;\n    marginBox = boxMargins;\n    widthBox = boxWidth;\n  }\n  return {\n    marginSide,\n    marginBox,\n    widthBox\n  };\n}\n\nfunction drawPatterns(ctx, { marginSide, marginBox, widthBox }, gesture) {\n  let count = 0;\n  while (count < 4) {\n    const marginX = marginSide + count * (widthBox + marginBox);\n    const marginY = marginSide;\n    drawSinglePatternGrid(ctx, marginX, marginY, marginBox, widthBox);\n    renderGestureIcon(ctx, marginX, marginY, widthBox, count, gesture);\n    count++;\n  }\n}\n\nconst patternIconRatios = {\n  sideMargins: 3,\n  verticleMargins: 3,\n  boxMargins: 5,\n  boxWidth: 13\n};\n\nfunction getWidthProportions(containerWidth) {\n  const { sideMargins, boxMargins, boxWidth } = patternIconRatios;\n  const ratio = containerWidth / getTotalWidthRatio();\n  return {\n    sideMargins: sideMargins * ratio,\n    boxMargins: boxMargins * ratio,\n    boxWidth: boxWidth * ratio\n  };\n}\n\nfunction getTotalWidthRatio() {\n  const { sideMargins, boxMargins, boxWidth } = patternIconRatios;\n  return sideMargins * 2 + boxMargins * (7 - 1) + boxWidth * 7;\n}\n\nfunction drawSinglePatternGrid(ctx, marginX, marginY, boxMargins, boxWidth) {\n  drawHorizontalLines(ctx, marginX, marginY, boxWidth);\n  drawVerticleLines(ctx, marginX, marginY, boxWidth);\n}\n\nfunction drawVerticleLines(ctx, marginX, marginY, boxWidth) {\n  let count = 0;\n  const lineDistance = boxWidth / 3;\n  let x = marginX;\n  while (count < 4) {\n    ctx.fillStyle = \"#2d2d2d\";\n    ctx.fillRect(x + 0.5, marginY + 0.5, 1.5, boxWidth + 0.5);\n    x += lineDistance;\n    count++;\n  }\n}\n\nfunction drawHorizontalLines(ctx, marginX, marginY, boxWidth) {\n  const lineDistance = boxWidth / 3;\n  let y = marginY;\n  let count = 0;\n  while (count < 4) {\n    ctx.fillStyle = \"#2d2d2d\";\n    ctx.fillRect(marginX + 0.5, y + 0.5, boxWidth + 0.5, 1.5);\n    y += lineDistance;\n    count++;\n  }\n}\n","import mixpanel from \"mixpanel-browser\";\nmixpanel.init(\"9f3a0f00fb59f93316bb8ac8e25d5613\");\n\nlet env_check = process.env.NODE_ENV === \"production\";\n\nlet actions = {\n  identify: id => {\n    if (env_check) mixpanel.identify(id);\n  },\n  alias: id => {\n    if (env_check) mixpanel.alias(id);\n  },\n  track: (name, props) => {\n    if (env_check) mixpanel.track(name, props);\n  },\n  time_event: (name, props) => {\n    if (env_check) mixpanel.time_event(name);\n  },\n  people: {\n    set: props => {\n      if (env_check) mixpanel.people.set(props);\n    }\n  }\n};\n\nexport let Mixpanel = actions;\n","export const question = {\n  one:\n    \"Thank you for taking the time to test this app. If you could please answer these questions without referencing back to the editor that would be much more useful.\",\n  two: \"How familiar are you with Vim?\",\n  three: \"What did you find challenging about using this editor?\",\n  four: \"How did you find the navigation?\",\n  five: \"Is there a way of moving down the document without swiping down?\",\n  six:\n    \"How did you find using the operation gestures: delete, copy, paste, cut?\",\n  seven:\n    \"Which operation gestures do these two patterns refer to: |__| and __|\",\n  ten: \"What was your overall experience using this editor?\"\n};\n","import React from \"react\";\nimport { Mixpanel } from \"../../mixpanel\";\nimport restartIcon from \"../../../assets/restart_icon.svg\";\nimport playIcon from \"../../../assets/play_icon.svg\";\nimport finishIcon from \"../../../assets/finish_icon.svg\";\nimport emailIcon from \"../../../assets/email_icon.svg\";\nimport { question } from \"./emailQuestions/EmailQuestions\";\n\nfunction TaskButton({\n  codeState,\n  setCodeState,\n  setResetCodeText,\n  time,\n  setTime\n}) {\n  switch (codeState) {\n    case \"Instructions\":\n      return (\n        <button\n          onClick={() => {\n            Mixpanel.track(\"Start Challenge\");\n            const duration = new Date().getTime();\n            setTime(duration);\n            setCodeState(\"Code\");\n          }}\n        >\n          <img src={playIcon} alt=\"\" />\n        </button>\n      );\n    case \"Code\":\n      return (\n        <button\n          onClick={() => {\n            const duration = new Date().getTime() - time;\n            const durationInSeconds = Math.floor(duration / 1000);\n            Mixpanel.track(\"Restart Challenge\", {\n              Duration: durationInSeconds\n            });\n            setResetCodeText();\n          }}\n        >\n          <img src={restartIcon} alt=\"\" />\n        </button>\n      );\n    case \"Finished\":\n      return (\n        <button\n          onClick={() => {\n            const duration = new Date().getTime() - time;\n            const durationInSeconds = Math.floor(duration / 1000);\n            Mixpanel.track(\"End Challenge\", {\n              Duration: durationInSeconds\n            });\n            setCodeState(\"Completed\");\n          }}\n        >\n          <img src={finishIcon} alt=\"\" />\n        </button>\n      );\n    case \"Completed\":\n      return (\n        <button\n          onClick={() => {\n            setCodeState(\"Instructions\");\n          }}\n        >\n          <a\n            href={`mailto:mrmarkorodic@gmail.com?subject=Hey 👋&body=${\n              question.one\n            }%0D%0A%0D%0A${question.two}%20%3A%0D%0A${\n              question.three\n            }%20%3A%0D%0A${question.four}%20%3A%0D%0A${\n              question.five\n            }%20%3A%0D%0A${question.six}%20%3A%0D%0A${\n              question.seven\n            }%20%3A%0D%0A${question.ten}%20%3A`}\n          >\n            <img src={emailIcon} alt=\"\" />\n          </a>\n        </button>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default TaskButton;\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\nimport { useContainerProperties } from \"../../sharedCustomHooks\";\nimport { useCreateCanvasContext } from \"./Header.customHooks\";\nimport {\n  useInterfaceGestureState,\n  useInterfaceGestureDispatch\n} from \"../Interface.customHooks\";\nimport { displayOperatorPatterns } from \"./HeaderHelpers\";\nimport TaskButton from \"./taskButton/TaskButton\";\n\nfunction Header() {\n  const HeaderElement = React.useRef();\n  const canvasElement = React.useRef();\n  const containerProperties = useContainerProperties(HeaderElement);\n  const { userActive, gesture, codeState } = useInterfaceGestureState();\n  const { setResetCodeText, setCodeState } = useInterfaceGestureDispatch();\n  const ctx = useCreateCanvasContext(containerProperties, canvasElement);\n  const [time, setTime] = React.useState(null);\n\n  React.useEffect(() => {\n    displayOperatorPatterns(ctx, containerProperties, gesture, userActive);\n  }, [ctx, containerProperties, gesture, userActive]);\n\n  return (\n    <header className={styles.header} ref={HeaderElement}>\n      {!userActive && (\n        <section>\n          <TaskButton\n            codeState={codeState}\n            setCodeState={setCodeState}\n            setResetCodeText={setResetCodeText}\n            time={time}\n            setTime={setTime}\n          />\n          <p>Lines</p>\n        </section>\n      )}\n      <canvas id={styles.canvas} ref={canvasElement} />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function useCreateCanvasContext({ width, height }, canvasElement) {\n  const [ctx, setCtx] = React.useState(null);\n  React.useEffect(() => {\n    const canvas = canvasElement.current;\n    canvas.width = width;\n    canvas.height = height;\n    setCtx(canvas.getContext(\"2d\"));\n  }, [width, height, canvasElement]);\n\n  return ctx;\n}\n","export function executeMotionCommand(editor, { name }) {\n  switch (name) {\n    case \"up\":\n      editor.execCommand(\"goLineUp\");\n      break;\n    case \"down\":\n      editor.execCommand(\"goLineDown\");\n      break;\n    case \"previous\":\n      editor.execCommand(\"goLineUp\");\n      break;\n    case \"next\":\n      editor.execCommand(\"goLineDown\");\n      break;\n    default:\n      return;\n  }\n}\n\nexport function executeOperationCommand(\n  editor,\n  { name },\n  { lineNumber },\n  clipboard,\n  userActive\n) {\n  switch (name) {\n    case \"delete\":\n      // move this check somewhere else\n      if (!userActive) {\n        setCursor(editor, lineNumber);\n        editor.execCommand(\"deleteLine\");\n        // setHistory(editor.getHistory());\n      }\n      break;\n    case \"cut\":\n      // move this check somewhere else\n      if (!userActive) {\n        setCursor(editor, lineNumber);\n        editor.execCommand(\"deleteLine\");\n        // setHistory(editor.getHistory());\n      }\n      break;\n    case \"paste\":\n      // and this one\n      if (!userActive) {\n        setCursor(editor, lineNumber);\n        editor.execCommand(\"newlineAndIndent\");\n        setCursor(editor, lineNumber);\n        editor.replaceSelection(clipboard);\n        // setHistory(editor.getHistory());\n      }\n      break;\n      // case \"undo\":\n      //   // and this\n      //   if (!userActive && history) {\n      //     editor.setHistory(history);\n      //     editor.undo();\n      //     setHistory(null);\n      //   }\n      break;\n    default:\n      return;\n  }\n}\n\n// ** helper functions **\n// ----------------------\nfunction setCursor(editor, lineNumber) {\n  editor.setCursor({\n    line: lineNumber,\n    ch: 0\n  });\n}\n\nfunction currentHistory() {}\n","export function motionHasFinished(editor, gestureActive, mode) {\n  return editor && !gestureActive && (mode === \"Inactive\" || mode === \"Motion\");\n}\n\nexport function validExecution({ type }) {\n  return type === \"Motion\" || type === \"Operator\";\n}\n\n// ** Marker Helpers **\n// --------------------\nfunction showRelativeLines(cm) {\n  const lineNum = cm.getCursor().line + 1;\n  if (cm.state.curLineNum === lineNum) {\n    return;\n  }\n  cm.state.curLineNum = lineNum;\n  cm.setOption(\"lineNumberFormatter\", l =>\n    l === lineNum ? lineNum : Math.abs(lineNum - l)\n  );\n}\n\nexport function markGutter(editor, { lineNumber }) {\n  editor.clearGutter(\"position\");\n  editor.setGutterMarker(lineNumber, \"position\", makeMarker());\n}\n\nfunction makeMarker() {\n  var marker = document.createElement(\"div\");\n  marker.innerHTML = \"●\";\n  marker.classList.add(\"position-gutter-marker\");\n  return marker;\n}\n\nexport function markGutterIcon(editor, cursorPosition) {\n  if (editor) {\n    markGutter(editor, cursorPosition, \"cursor\");\n  }\n}\n\nexport function markText(editor, mode, cursorPosition, command, userActive) {\n  if (editor) {\n    clearMarks(editor);\n    markCursor(editor, mode, userActive);\n    markLine(editor, cursorPosition, command, userActive);\n  }\n}\n\nfunction clearMarks(editor) {\n  if (editor.getAllMarks()[0]) {\n    editor.getAllMarks()[0].clear();\n  }\n}\n\nfunction markCursor(editor, mode, userActive) {\n  // investigate why removing this causes cursor not to be reset, since we do this in markText();\n  clearMarks(editor);\n  const line = editor.getCursor().line;\n  const ch = editor.getCursor().ch;\n\n  if (mode === \"Motion\" || (mode = \"Operation\" && !userActive)) {\n    editor.markText(\n      { line, ch },\n      { line, ch: ch + 1 },\n      { readOnly: true, className: \"cursor\" }\n    );\n  }\n}\n\nfunction markLine(editor, { lineNumber }, { name }, userActive) {\n  if (userActive && editor.getLine(lineNumber)) {\n    const lastCh = editor.getLine(lineNumber).length;\n    editor.markText(\n      { line: lineNumber, ch: 0 },\n      { line: lineNumber, ch: lastCh },\n      { readOnly: false, className: `cursor-${name}` }\n    );\n  }\n}\n\nexport function relativeLinesOn(editor) {\n  if (editor) {\n    editor.on(\"cursorActivity\", showRelativeLines);\n  }\n}\n","export const instructionsText = ` \n** Gesture code editing challenge **\n \n------------------------------------\n \nHello 👋, this is a short coding challenge similar to vim golf - but using a gestural interface. This editor is intended for mobile use.\n \nThe editor is comprised of a code view and a gesture pad. Begin by scrolling down 👇 using the gesture pad.\n \n------------------------------------\n \n# INSTRUCTIONS 📝\n \nThere are two types of gestures: motions and operations.\n  \n## Motions\n \nMove up a line:\n    - swipe up or left\n \nMove down a line:\n    - swipe down or right\n \n## Operations\n \nOperations are performed on entire lines and will only be executed when you release your finger on mobile and click on desktop.\n \nValid gestures are displayed in the header when you begin moving. They are:\n- delete\n- copy\n- paste\n- cut\n \nTry moving around the gesture pad to get a feel for how the cursor moves.\n\nOnce you've got that, create an operation gesture but don't let go. When an operation gesture is matched, the line will be highlighted in the code and drawn in the gesture pad. Now let go and the operation will be executed.\n \n--------------\n \n# Challenge 🎯\n \nYou will need to edit the text labeled START to match the END text. This is a timed challenge ⏳, so try and complete it as quickly as you can.\n \nRestart the challenge by pressing: 🔄\nAnd once your code is correct press: ✔️\nGreat! Press the ▶️ button in the header to get started.\n \n--------------`;\n\nexport const initialCodeText = `# Delete the commented lines and rearrange the string variables\n\n** END 🏁 **\n----------------------\n\nconst strOne = \"lines\"\nconst strTwo = \"of\"\nconst strThree = \"code\"\n\n----------------------\n\n** START ✏️ (to edit) **\n------------------------\n\n// this is a commented line\n// this is another commented line\nconst strThree = \"code\"\n// and this one\nconst strOne = \"lines\"\n// aaaannnd this one!\nconst strTwo = \"of\"\n\n------------------------`;\n\nexport const finalCodeState = `# Delete the commented lines and rearrange the string variables\n\n** END 🏁 **\n----------------------\n\nconst strOne = \"lines\"\nconst strTwo = \"of\"\nconst strThree = \"code\"\n\n----------------------\n\n** START ✏️ (to edit) **\n------------------------\n\nconst strOne = \"lines\"\nconst strTwo = \"of\"\nconst strThree = \"code\"\n\n------------------------`;\n\nexport const taskCompleteCodeText = `\n** Great stuff! Challenge completed 🥳 **\n----------------------------------\n\nThis is a project I was working on at the Recurse Center. It would be really helpful to get your thoughts and ask you some questions!\n\nHit the 📧 button above to send me an email or you can message me on zulip @Marko Rodic\n\n\n\nThank you!`;\n","import React from \"react\";\nimport \"./CodeView.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/theme/neat.css\";\nimport \"codemirror/mode/xml/xml.js\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport {\n  instructionsText,\n  initialCodeText,\n  taskCompleteCodeText\n} from \"../codeText\";\n\nfunction CodeView({\n  editor,\n  setEditor,\n  codeState,\n  resetCodeText,\n  setResetCodeText\n}) {\n  React.useEffect(() => {\n    if (editor) {\n      const editorText = textToDisplay(editor, codeState);\n      editor.setValue(editorText);\n    }\n  }, [editor, codeState]);\n  React.useEffect(() => {\n    if (editor && resetCodeText) {\n      editor.setValue(initialCodeText);\n      setResetCodeText();\n    }\n  }, [editor, resetCodeText]);\n\n  return (\n    <div className=\"code\">\n      <CodeMirror\n        value={instructionsText}\n        options={{\n          lineNumbers: true,\n          autofocus: true,\n          lineWrapping: true,\n          gutters: [\"CodeMirror-linenumbers\", \"position\"]\n        }}\n        onChange={() => {}}\n        editorDidMount={editor => {\n          setEditor(editor);\n        }}\n        className={\"code-editor\"}\n      />\n    </div>\n  );\n}\n\nfunction textToDisplay(editor, codeState) {\n  switch (codeState) {\n    case \"Instructions\":\n      return instructionsText;\n    case \"Code\":\n      return initialCodeText;\n    case \"Finished\":\n      return taskCompleteCodeText;\n    default:\n      return \"\";\n  }\n}\n\nexport default CodeView;\n","import React from \"react\";\nimport {\n  executeOperationCommand,\n  executeMotionCommand\n} from \"../Code.commands\";\nimport {\n  markGutterIcon,\n  markText,\n  relativeLinesOn\n} from \"./CodeEditor.helpers\";\nimport { useCursorPosition, useClipboard } from \"../Code.customHooks\";\nimport {\n  useInterfaceGestureState,\n  useInterfaceGestureDispatch\n} from \"../../Interface.customHooks\";\nimport CodeView from \"./codeView/CodeView\";\nimport { finalCodeState } from \"./codeText\";\n\nfunction CodeEditor() {\n  const {\n    userActive,\n    mode,\n    gestureActive,\n    resetCodeText,\n    codeState,\n    gesture\n  } = useInterfaceGestureState();\n  const { setResetCodeText, setCodeState } = useInterfaceGestureDispatch();\n  const [editor, setEditor] = React.useState(null);\n  const cursorPosition = useCursorPosition(\n    editor,\n    gestureActive,\n    mode,\n    gesture\n  );\n  const clipboard = useClipboard(editor, gesture, cursorPosition);\n\n  // execute commands\n  React.useEffect(() => {\n    executeMotionCommand(editor, gesture);\n  }, [editor, gesture]);\n\n  React.useEffect(() => {\n    executeOperationCommand(\n      editor,\n      gesture,\n      cursorPosition,\n      clipboard,\n      userActive\n    );\n  }, [editor, gesture, cursorPosition, clipboard, userActive]);\n\n  // mark text\n  React.useEffect(() => {\n    relativeLinesOn(editor);\n  }, [editor]);\n\n  React.useEffect(() => {\n    markGutterIcon(editor, cursorPosition, \"cursor\");\n  }, [editor, cursorPosition]);\n\n  React.useEffect(() => {\n    markText(editor, mode, cursorPosition, gesture, userActive);\n  }, [editor, cursorPosition, gesture, mode, userActive]);\n\n  // check text value\n  React.useEffect(() => {\n    if (editor) {\n      if (editor.getValue() === finalCodeState && codeState === \"Code\") {\n        setCodeState(\"Finished\");\n      }\n    }\n  }, [editor, gesture, codeState]);\n\n  return (\n    <div className=\"code\">\n      <CodeView\n        setEditor={setEditor}\n        editor={editor}\n        codeState={codeState}\n        resetCodeText={resetCodeText}\n        setResetCodeText={setResetCodeText}\n      />\n    </div>\n  );\n}\n\nexport default CodeEditor;\n","import React from \"react\";\nimport { getCursorPosition } from \"./Code.utils\";\nimport { motionHasFinished } from \"./codeEditor/CodeEditor.helpers\";\n\nexport function useCursorPosition(editor, gestureActive, mode, gesture) {\n  const [cursorPosition, setCursorPosition] = React.useState({\n    lineNumber: 0,\n    characterPosition: 0\n  });\n\n  React.useEffect(() => {\n    if (editor) {\n      editor.setCursor({ line: 0, ch: 0 });\n    }\n  }, [editor]);\n\n  React.useEffect(() => {\n    if (motionHasFinished(editor, gestureActive, mode)) {\n      const { lineNumber, characterPosition } = getCursorPosition(editor);\n      setCursorPosition({ lineNumber, characterPosition });\n    }\n  }, [editor, mode, gesture, gestureActive]);\n\n  return cursorPosition;\n}\n\nexport function useClipboard(editor, gesture, cursorPosition) {\n  const [clipBoard, setClipBoard] = React.useState(\"\");\n  React.useEffect(() => {\n    if (gesture.name === \"copy\" || gesture.name === \"cut\") {\n      const lineContent = editor.getLine(cursorPosition.lineNumber);\n      setClipBoard(lineContent);\n    }\n  }, [editor, gesture, cursorPosition]);\n\n  return clipBoard;\n}\n","export function getCursorPosition(editor) {\n  const lineNumber = editor.getCursor().line;\n  const characterPosition = editor.getCursor().ch;\n  return { lineNumber, characterPosition };\n}\n","export const NUMBER_OF_BOXES = {\n  X: 9,\n  Y: 9\n};\n\nexport const GestureIdleTimeInMs = 200;\n\nexport const MAX_PATH_LENGTH = 6;\n","import { NUMBER_OF_BOXES, GestureIdleTimeInMs } from \"../../CONSTANTS\";\nimport _ from \"lodash\";\n\nexport function getElementProperties(element) {\n  return element.current.getBoundingClientRect();\n}\n\nexport function gridPositionHasChanged(currentPosition, newPosition) {\n  return !_.isEqual(currentPosition, newPosition);\n}\n\nexport function positionItem(position, count) {\n  return {\n    position,\n    timeAdded: count,\n    expired: false\n  };\n}\n\nexport function getGridPosition(event, container) {\n  const documentPosition = getDocumentPositionFrom(event);\n  const userPosition = getUserPosition(\n    documentPosition,\n    container.x,\n    container.y\n  );\n  const boxWidth = container.width / NUMBER_OF_BOXES.X;\n  const boxHeight = container.height / NUMBER_OF_BOXES.Y;\n\n  return gridPosition(userPosition, boxWidth, boxHeight);\n}\n\nfunction getDocumentPositionFrom(event) {\n  let position;\n  if (event.type === \"mousemove\") {\n    position = { x: event.clientX, y: event.clientY };\n  }\n  if (event.type === \"touchmove\") {\n    position = {\n      x: event.changedTouches[0].clientX,\n      y: event.changedTouches[0].clientY\n    };\n  }\n  return position;\n}\n\nexport function getUserPosition(documentPosition, containerX, containerY) {\n  const x = documentPosition.x - containerX;\n  const y = documentPosition.y - containerY;\n\n  return { x, y };\n}\n\nexport function gridPosition(userPosition, boxWidth, boxHeight) {\n  const x = Math.floor(userPosition.x / boxWidth) + 1;\n  const y = Math.floor(userPosition.y / boxHeight) + 1;\n\n  return { x, y };\n}\n\nexport function whenGestureIsInactive(\n  gestureActive,\n  expiringPositions,\n  dispatchCallBack\n) {\n  if (!gestureActive && expiringPositions.length) {\n    dispatchCallBack();\n  }\n}\n\nexport function ifInputIsIdle(timer, setTimer, dispatchCallBack) {\n  clearTimeout(timer);\n  setTimer(\n    setTimeout(() => {\n      dispatchCallBack();\n    }, GestureIdleTimeInMs)\n  );\n}\n","import { NUMBER_OF_BOXES } from \"../../../CONSTANTS\";\nimport { renderInnerLine } from \"./GestureViewRenderHelpers\";\n\nexport function renderGrid(ctx, containerWidth, boxWidth, mode) {\n  if (mode === \"Insert\") {\n    ctx.fillStyle = \"#1e1e1e\";\n  } else {\n    ctx.fillStyle = \"#f7f7f7\";\n  }\n  let count = 0;\n  while (NUMBER_OF_BOXES.X > count) {\n    const x = count * boxWidth;\n    const y = 0 * boxWidth;\n    ctx.fillRect(x, y, 0.5, containerWidth);\n    count = count + 1;\n  }\n  count = 0;\n  while (NUMBER_OF_BOXES.X > count) {\n    const x = 0 * boxWidth;\n    const y = count * boxWidth;\n    ctx.fillRect(x, y, containerWidth, 0.5);\n    count = count + 1;\n  }\n}\n\nexport function renderGridPoints(ctx, boxWidth, mode) {\n  if (mode === \"Insert\") {\n    ctx.fillStyle = \"#545454\";\n  } else {\n    ctx.fillStyle = \"#a3a3a3\";\n  }\n  let countX, countY;\n  countY = 1;\n  while (NUMBER_OF_BOXES.Y > countY) {\n    countX = 1;\n    while (NUMBER_OF_BOXES.X > countX) {\n      const x = countX * boxWidth;\n      const y = countY * boxWidth;\n      ctx.fillRect(x - 0.5, y - 0.5, 1, 1);\n      countX++;\n    }\n    countY++;\n  }\n}\n\nexport function renderCurrentBox(ctx, position, boxWidth, mode) {\n  if (position.x) {\n    const x = (position.x - 1) * boxWidth;\n    const y = (position.y - 1) * boxWidth;\n    if (mode === \"Insert\") {\n      ctx.fillStyle = \"white\";\n    } else {\n      ctx.fillStyle = \"black\";\n    }\n    ctx.fillRect(x, y, boxWidth, boxWidth);\n  }\n}\n\nexport function renderExpiredBoxes(\n  ctx,\n  boxWidth,\n  expiringPositions,\n  count,\n  mode\n) {\n  if (mode === \"Insert\") {\n    expiringPositions.forEach(box => {\n      const diff = count - box.timeAdded;\n      if (diff < 10) {\n        const alphaValue = 1 - diff / 20;\n        ctx.fillStyle = `rgba(255, 255, 255, ${alphaValue})`;\n      } else {\n        ctx.fillStyle = \"rgba(255,255,255,0)\";\n      }\n      const x = (box.position.x - 1) * boxWidth;\n      const y = (box.position.y - 1) * boxWidth;\n      ctx.fillRect(x, y, boxWidth, boxWidth);\n    });\n  } else {\n    if (expiringPositions.length) {\n      expiringPositions.forEach(box => {\n        const diff = count - box.timeAdded;\n        if (diff < 10) {\n          const alphaValue = 1 - diff / 20;\n          ctx.fillStyle = `rgba(0, 0, 0, ${alphaValue})`;\n        } else {\n          ctx.fillStyle = \"rgba(0,0,0,0)\";\n        }\n        const x = (box.position.x - 1) * boxWidth;\n        const y = (box.position.y - 1) * boxWidth;\n        ctx.fillRect(x, y, boxWidth, boxWidth);\n      });\n    }\n  }\n}\n\nexport function renderBG(ctx, containerWidth, mode) {\n  if (mode === \"Insert\") {\n    ctx.fillStyle = \"rgba(0,0,0,1)\";\n    ctx.fillRect(0, 0, containerWidth, containerWidth);\n  }\n}\n\nexport function clearCanvas(ctx, containerWidth) {\n  ctx.clearRect(0, 0, containerWidth, containerWidth);\n}\n\nexport function renderMatchedPattern(ctx, boxWidth, gesture, mode) {\n  if (mode === \"Operator\") {\n    gesture.pattern.forEach((position, index) => {\n      const prevDirection = gesture.path[index - 1];\n      const direction = gesture.path[index];\n      const nextDirection = gesture.path[index + 1];\n      const gestureLength = gesture.path.length;\n\n      renderCurrentBox(ctx, position, boxWidth);\n      renderInnerLine(\n        ctx,\n        position,\n        prevDirection,\n        direction,\n        nextDirection,\n        index,\n        gestureLength,\n        boxWidth\n      );\n    });\n  }\n}\n","import React from \"react\";\nimport style from \"./GestureView.module.css\";\nimport { useCreateCanvasContext } from \"./GestureView.customHooks\";\nimport {\n  renderGrid,\n  renderGridPoints,\n  renderCurrentBox,\n  renderExpiredBoxes,\n  clearCanvas,\n  renderMatchedPattern,\n  renderBG\n} from \"./GestureViewHelpers\";\nimport { renderGiridPointGuides } from \"./gestureViewGrid/GestureViewGrid\";\nimport { NUMBER_OF_BOXES } from \"../../../CONSTANTS\";\nimport { useInterfaceGestureState } from \"../../../Interface.customHooks\";\n\nexport default function GestureView({\n  position,\n  expiringPositions,\n  count,\n  containerWidth,\n  lastMatchedGesture\n}) {\n  React.useEffect(() => {});\n  const canvasElement = React.useRef();\n  const ctx = useCreateCanvasContext(containerWidth, canvasElement);\n  const { gestureActive, mode } = useInterfaceGestureState();\n\n  React.useEffect(() => {\n    if (ctx) {\n      const boxWidth = containerWidth / NUMBER_OF_BOXES.X;\n\n      clearCanvas(ctx, containerWidth);\n      renderBG(ctx, containerWidth, mode);\n      renderGrid(ctx, containerWidth, boxWidth, mode);\n      renderGridPoints(ctx, boxWidth, mode);\n      renderGiridPointGuides(ctx, position, boxWidth, gestureActive, mode);\n      renderCurrentBox(ctx, position, boxWidth, mode);\n      renderMatchedPattern(ctx, boxWidth, lastMatchedGesture, mode);\n      renderExpiredBoxes(ctx, boxWidth, expiringPositions, count, mode);\n    }\n  }, [\n    ctx,\n    count,\n    containerWidth,\n    expiringPositions,\n    position,\n    gestureActive,\n    lastMatchedGesture,\n    mode\n  ]);\n\n  return <canvas id={style.canvas} ref={canvasElement} />;\n}\n","import React from \"react\";\n\nexport function useCreateCanvasContext(containerWidth, canvasElement) {\n  const [ctx, setCtx] = React.useState(null);\n  React.useEffect(() => {\n    const canvas = canvasElement.current;\n    canvas.width = canvas.height = containerWidth;\n    setCtx(canvas.getContext(\"2d\"));\n  }, [containerWidth, canvasElement]);\n\n  return ctx;\n}\n","export function renderGiridPointGuides(\n  ctx,\n  position,\n  boxWidth,\n  gestureActive,\n  mode\n) {\n  if (position.x && gestureActive) {\n    const guidePoints = [];\n    let x, y;\n\n    x = (position.x - 1) * boxWidth - boxWidth;\n    y = (position.y - 1) * boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth - boxWidth;\n    y = (position.y - 1) * boxWidth + boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth;\n    y = (position.y - 1) * boxWidth - boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth + boxWidth;\n    y = (position.y - 1) * boxWidth - boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth + 2 * boxWidth;\n    y = (position.y - 1) * boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth + 2 * boxWidth;\n    y = (position.y - 1) * boxWidth + boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth;\n    y = (position.y - 1) * boxWidth + 2 * boxWidth;\n    guidePoints.push({ x, y });\n\n    x = (position.x - 1) * boxWidth + boxWidth;\n    y = (position.y - 1) * boxWidth + 2 * boxWidth;\n    guidePoints.push({ x, y });\n\n    guidePoints.forEach(point => {\n      if (mode === \"Insert\") {\n        ctx.fillStyle = \"#707070\";\n      } else {\n        ctx.fillStyle = \"#969696\";\n      }\n      ctx.fillRect(point.x - 1, point.y - 1, 2, 2);\n    });\n  }\n}\n","export function renderInnerLine(\n  canvas,\n  position,\n  prevDirection,\n  direction,\n  nextDirection,\n  index,\n  gestureLength,\n  boxWidth\n) {\n  let startPoint, centerPoint, endPoint;\n\n  centerPoint = [boxWidth / 2, boxWidth / 2];\n\n  if (prevDirection) {\n    startPoint = getBoxPointFromPreviousDirection(prevDirection, boxWidth);\n  } else {\n    startPoint = centerPoint;\n  }\n\n  if (direction) {\n    endPoint = getBoxPointFromCurrentDirection(direction, boxWidth);\n  } else {\n    endPoint = centerPoint;\n  }\n\n  canvas.beginPath();\n  canvas.moveTo(\n    (position.x - 1) * boxWidth + startPoint[0],\n    (position.y - 1) * boxWidth + startPoint[1]\n  );\n  canvas.lineTo(\n    (position.x - 1) * boxWidth + centerPoint[0],\n    (position.y - 1) * boxWidth + centerPoint[1]\n  );\n  canvas.lineTo(\n    (position.x - 1) * boxWidth + endPoint[0],\n    (position.y - 1) * boxWidth + endPoint[1]\n  );\n  canvas.lineWidth = 2;\n  canvas.strokeStyle = \"white\";\n  canvas.stroke();\n\n  if (positionIsLast(index, gestureLength)) {\n    const x = (position.x - 1) * boxWidth + endPoint[0];\n    const y = (position.y - 1) * boxWidth + endPoint[1];\n    canvas.fillStyle = \"white\";\n    canvas.fillRect(x - 2, y - 2, 4, 4);\n  }\n}\n\nfunction positionIsLast(index, gestureLength) {\n  return index === gestureLength;\n}\n\nfunction getBoxPointFromCurrentDirection(nextDirection, boxWidth) {\n  switch (nextDirection) {\n    case \"Up\":\n      return [boxWidth / 2, 0];\n    case \"Right\":\n      return [boxWidth, boxWidth / 2];\n    case \"Down\":\n      return [boxWidth / 2, boxWidth];\n    case \"Left\":\n      return [0, boxWidth / 2];\n    default:\n      return;\n  }\n}\n\nfunction getBoxPointFromPreviousDirection(direction, boxWidth) {\n  switch (direction) {\n    case \"Up\":\n      return [boxWidth / 2, boxWidth];\n    case \"Right\":\n      return [0, boxWidth / 2];\n    case \"Down\":\n      return [boxWidth / 2, 0];\n    case \"Left\":\n      return [boxWidth, boxWidth / 2];\n    default:\n      return;\n  }\n}\n","import React from \"react\";\nimport styles from \"./GestureInput.module.css\";\nimport {\n  getGridPosition,\n  gridPositionHasChanged,\n  positionItem,\n  ifInputIsIdle\n} from \"./GestureInputHelpers\";\nimport { useContainerProperties } from \"../../../sharedCustomHooks\";\nimport GestureView from \"./gestureView/GestureView\";\nimport {\n  useInterfaceGestureState,\n  useInterfaceGestureDispatch,\n  useInterfaceCountState\n} from \"../../Interface.customHooks\";\n\nexport default function GestureInput({\n  updateGestureState,\n  lastMatchedGesture\n}) {\n  const GestureInputElement = React.useRef();\n  const containerProperties = useContainerProperties(GestureInputElement);\n  const [position, setPosition] = React.useState({});\n  const [expiringPositions, setExpiringPositions] = React.useState([]);\n  const [pattern, setPattern] = React.useState([]);\n  const [timer, setTimer] = React.useState(null);\n  const count = useInterfaceCountState();\n  const { userActive, gestureActive } = useInterfaceGestureState();\n  const {\n    setUserActive,\n    setUserInactive,\n    setGestureActive,\n    setGestureInactive,\n    setMode\n  } = useInterfaceGestureDispatch();\n\n  const onGesture = event => {\n    event.preventDefault();\n    const newPosition = getGridPosition(event, containerProperties);\n\n    if (gridPositionHasChanged(position, newPosition)) {\n      updateGestureState([position, newPosition]);\n      setExpiringPositions([\n        ...expiringPositions,\n        positionItem(position, count)\n      ]);\n      setPosition(newPosition);\n      setPattern(newPosition);\n    }\n\n    if (!userActive) {\n      setUserActive();\n      setMode(\"Motion\");\n    }\n\n    if (!gestureActive) {\n      setGestureActive();\n    }\n\n    ifInputIsIdle(timer, setTimer, () => {\n      setPattern([]);\n      setGestureInactive();\n    });\n  };\n\n  const onGestureEnd = event => {\n    event.preventDefault();\n    setUserInactive();\n    setMode(\"Inactive\");\n  };\n\n  const onClick = event => {\n    event.preventDefault();\n    if (userActive) {\n      setUserInactive();\n    } else {\n      setUserActive();\n    }\n  };\n\n  return (\n    <section\n      ref={GestureInputElement}\n      onMouseMove={onGesture}\n      onMouseLeave={onGestureEnd}\n      onTouchMove={onGesture}\n      onTouchEnd={onGestureEnd}\n      onClick={onClick}\n      className={styles[\"gesture-input\"]}\n    >\n      <GestureView\n        count={count}\n        position={position}\n        pattern={pattern}\n        expiringPositions={expiringPositions}\n        containerWidth={containerProperties.width}\n        lastMatchedGesture={lastMatchedGesture}\n      />\n    </section>\n  );\n}\n","export const editGestures = {\n  edit: {\n    operator: {\n      delete: {\n        id: 1,\n        name: \"delete\",\n        type: \"Operation\",\n        length: 4,\n        path: [\n          [\"Right\", \"Right\", \"Right\", \"Up\"],\n          [\"Right\", \"Right\", \"Right\", \"Down\"],\n          [\"Left\", \"Left\", \"Left\", \"Up\"],\n          [\"Left\", \"Left\", \"Left\", \"Down\"]\n        ],\n        normalisedPositions: [\n          { x: 3, y: 2 },\n          { x: 2, y: 2 },\n          { x: 1, y: 2 },\n          { x: 1, y: 1 }\n        ]\n      },\n      yank: {\n        id: 2,\n        name: \"yank\",\n        type: \"Operation\",\n        length: 5,\n        path: [\n          [\"Left\", \"Left\", \"Down\", \"Down\", \"Right\"],\n          [\"Left\", \"Left\", \"Up\", \"Up\", \"Right\"],\n          [\"Right\", \"Right\", \"Down\", \"Down\", \"Left\"],\n          [\"Right\", \"Right\", \"Up\", \"Up\", \"Left\"]\n        ],\n        normalisedPositions: [\n          { x: 3, y: 1 },\n          { x: 2, y: 1 },\n          { x: 2, y: 2 },\n          { x: 2, y: 3 },\n          { x: 3, y: 3 }\n        ]\n      },\n      change: {\n        name: \"change\",\n        type: \"Operation\",\n        normalisedPositions: [\n          { x: 3, y: 1 },\n          { x: 2, y: 1 },\n          { x: 2, y: 2 },\n          { x: 2, y: 3 },\n          { x: 3, y: 3 }\n        ]\n      },\n      paste: {\n        name: \"paste\",\n        type: \"Operation\",\n        normalisedPositions: [\n          { x: 3, y: 1 },\n          { x: 2, y: 1 },\n          { x: 2, y: 2 },\n          { x: 2, y: 3 },\n          { x: 3, y: 3 }\n        ]\n      },\n      cut: {\n        name: \"cut\",\n        type: \"Operation\",\n        normalisedPositions: [\n          { x: 3, y: 1 },\n          { x: 2, y: 1 },\n          { x: 2, y: 2 },\n          { x: 2, y: 3 },\n          { x: 3, y: 3 }\n        ]\n      },\n      // insert: {\n      //   name: \"insert\",\n      //   type: \"Operation\",\n      //   normalisedPositions: [\n      //     { x: 3, y: 1 },\n      //     { x: 2, y: 1 },\n      //     { x: 2, y: 2 },\n      //     { x: 2, y: 3 },\n      //     { x: 3, y: 3 }\n      //   ]\n      // },\n      names: [\"change\", \"paste\", \"cut\", \"yank\", \"delete\", \"insert\"],\n      all: [\n        // {\n        //   name: \"change\",\n        //   path: [\"Down\", \"Right\", \"Right\", \"Up\", \"Up\", \"Left\"],\n        //   type: \"Operator\"\n        // },\n        // {\n        //   name: \"change\",\n        //   path: [\"Down\", \"Left\", \"Left\", \"Up\", \"Up\", \"Right\"],\n        //   type: \"Operator\"\n        // },\n        {\n          name: \"paste\",\n          path: [\"Up\", \"Up\", \"Right\", \"Down\"],\n          type: \"Operator\"\n        },\n        {\n          name: \"paste\",\n          path: [\"Up\", \"Up\", \"Left\", \"Down\"],\n          type: \"Operator\"\n        },\n        {\n          name: \"cut\",\n          path: [\"Down\", \"Left\", \"Left\", \"Up\"],\n          type: \"Operator\"\n        },\n        {\n          name: \"cut\",\n          path: [\"Down\", \"Right\", \"Right\", \"Up\"],\n          type: \"Operator\"\n        },\n        {\n          name: \"copy\",\n          path: [\"Left\", \"Down\", \"Down\", \"Right\"],\n          type: \"Operator\"\n        },\n        // {\n        //   name: \"copy\",\n        //   path: [\"Right\", \"Down\", \"Down\", \"Left\"],\n        //   type: \"Operator\"\n        // },\n        // {\n        //   name: \"copy\",\n        //   path: [\"Right\", \"Up\", \"Up\", \"Left\"],\n        //   type: \"Operator\"\n        // },\n        {\n          name: \"copy\",\n          path: [\"Left\", \"Up\", \"Up\", \"Right\"],\n          type: \"Operator\"\n        },\n        // {\n        //   name: \"undo\",\n        //   path: [\"Right\", \"Up\", \"Left\", \"Left\"],\n        //   type: \"Operator\"\n        // },\n        { name: \"delete\", path: [\"Right\", \"Right\", \"Up\"], type: \"Operator\" },\n        { name: \"delete\", path: [\"Left\", \"Left\", \"Up\"], type: \"Operator\" }\n        // { name: \"insert\", path: [\"Up\", \"Up\", \"Right\"], type: \"Insert\" },\n        // { name: \"insert\", path: [\"Up\", \"Up\", \"Left\"], type: \"Insert\" }\n      ]\n    },\n    motion: {\n      next: {\n        id: 1,\n        name: \"next\",\n        type: \"Motion\",\n        length: 1,\n        path: \"Right\",\n        normalisedPositions: [{ x: 2, y: 2 }, { x: 3, y: 2 }]\n      },\n      previous: {\n        id: 2,\n        name: \"previous\",\n        type: \"Motion\",\n        length: 1,\n        path: \"Left\",\n        normalisedPositions: [{ x: 2, y: 2 }, { x: 1, y: 2 }]\n      },\n      up: {\n        id: 3,\n        name: \"up\",\n        type: \"Motion\",\n        length: 1,\n        path: \"Up\",\n        normalisedPositions: [{ x: 2, y: 3 }, { x: 2, y: 2 }]\n      },\n      down: {\n        id: 4,\n        name: \"down\",\n        type: \"Motion\",\n        length: 1,\n        path: \"Down\",\n        normalisedPositions: [{ x: 2, y: 1 }, { x: 2, y: 2 }]\n      },\n      all: [\n        {\n          id: 1,\n          name: \"next\",\n          type: \"Motion\",\n          length: 1,\n          path: [\"Right\"],\n          normalisedPositions: [{ x: 2, y: 2 }, { x: 3, y: 2 }]\n        },\n        {\n          id: 2,\n          name: \"previous\",\n          type: \"Motion\",\n          length: 1,\n          path: [\"Left\"],\n          normalisedPositions: [{ x: 2, y: 2 }, { x: 1, y: 2 }]\n        },\n        {\n          id: 3,\n          name: \"up\",\n          type: \"Motion\",\n          length: 1,\n          path: [\"Up\"],\n          normalisedPositions: [{ x: 2, y: 3 }, { x: 2, y: 2 }]\n        },\n        {\n          id: 4,\n          name: \"down\",\n          type: \"Motion\",\n          length: 1,\n          path: [\"Down\"],\n          normalisedPositions: [{ x: 2, y: 1 }, { x: 2, y: 2 }]\n        }\n      ]\n    },\n    object: [\n      {\n        name: \"Comment\",\n        type: \"Object\",\n        length: 6,\n        path: [\"Down\", \"Down\", \"Down\", \"Right\", \"Up\", \"Up\"],\n        normalisedPositions: [\n          { x: 1, y: 3 },\n          { x: 1, y: 2 },\n          { x: 1, y: 3 },\n          { x: 2, y: 3 },\n          { x: 2, y: 2 },\n          { x: 2, y: 1 }\n        ]\n      }\n    ],\n    allTypes: [\"operator\", \"motion\"],\n    allPaths: [\n      {\n        name: \"delete\",\n        type: \"operator\",\n        length: 4,\n        path: [\"Right\", \"Right\", \"Right\", \"Up\"]\n      },\n      {\n        name: \"delete\",\n        type: \"operator\",\n        length: 4,\n        path: [\"Right\", \"Right\", \"Right\", \"Down\"]\n      },\n      {\n        name: \"delete\",\n        type: \"operator\",\n        length: 4,\n        path: [\"Left\", \"Left\", \"Left\", \"Up\"]\n      },\n      {\n        name: \"delete\",\n        type: \"operator\",\n        length: 4,\n\n        path: [\"Left\", \"Left\", \"Left\", \"Down\"]\n      },\n      {\n        name: \"next\",\n        type: \"motion\",\n        length: 1,\n        path: [\"Right\"]\n      },\n      {\n        name: \"previous\",\n        type: \"motion\",\n        length: 1,\n        path: [\"Left\"]\n      },\n      {\n        name: \"up\",\n        type: \"motion\",\n        length: 1,\n        path: [\"Up\"]\n      },\n      {\n        name: \"down\",\n        type: \"motion\",\n        length: 1,\n        path: [\"Down\"]\n      }\n    ]\n  }\n};\n","import { editGestures } from \"./editPatterns\";\nimport { writeGestures } from \"./writePatterns\";\n\nexport const validGestures = {\n  ...editGestures,\n  ...writeGestures\n};\n","export const writeGestures = [\n  // primitive: {\n  //   string: {\n  //     type: \"write\",\n  //     pattern: [],\n  //     action: \"\"\n  //   }\n  // },\n  // dataStructure: {\n  //   defineArray: {\n  //     type: \"write\",\n  //     pattern: [\"LLDDRR\"],\n  //     action: \"array\"\n  //   }\n  // },\n  // controlFlow: {\n  //   function: {\n  //     type: \"conditional\",\n  //     pattern: [\"RUUR\"],\n  //     action: \"function\"\n  //   }\n  // },\n  // definition: {\n  //   function: {\n  //     type: \"write\",\n  //     pattern: [\"RUUR\"],\n  //     action: \"function\"\n  //   }\n  // },\n  // iterator: {\n  //   loop: {\n  //     type: \"write\",\n  //     pattern: [\"RRDLUU\"],\n  //     action: \"loop\"\n  //   }\n  // },\n  // methods: {\n  //   print: {\n  //     type: \"write\",\n  //     pattern: [\"LLUR\"],\n  //     action: \"print\"\n  //   }\n  // },\n  // allPatterns: [\n  //   {\n  //     string: {\n  //       type: \"write\",\n  //       pattern: [],\n  //       action: \"\"\n  //     }\n  //   }\n];\n","import _ from \"lodash\";\nimport { MAX_PATH_LENGTH } from \"./../CONSTANTS\";\n\nexport function getGesture(validGestures, gestureMatched, count) {\n  const gesture = validGestures.edit[gestureMatched.type][gestureMatched.name];\n  if (gestureMatched.type === \"motion\") {\n    gesture.id = count;\n    return gesture;\n  }\n}\n\nexport function trimPattern(pattern, gesture) {\n  return pattern.slice(\n    pattern.length - gesture.path.length - 1,\n    pattern.length\n  );\n}\n\nexport function gestureComboMatched(pattern, validGestures, mode) {\n  let gestureMatched;\n\n  const path = getPathFrom(pattern);\n\n  validGestures.edit.allTypes.forEach(gestureType => {\n    if (!gestureMatched) {\n      gestureMatched = validGestures.edit[gestureType].all.find(gesture => {\n        const pathTrimmed = trimArray(path, gesture.path.length);\n        return _.isEqual(pathTrimmed, gesture.path);\n      });\n    }\n  });\n  return gestureMatched;\n}\n\nfunction trimArray(array, length) {\n  return array.slice(array.length - length, array.length);\n}\n\nexport function getNewPath(path, gestureMatched) {\n  const newPath = path;\n  const gestureDirection = gestureMatched.path;\n\n  if (path.length === 7) {\n    newPath.shift();\n  }\n  newPath.push(gestureDirection);\n\n  return newPath;\n}\n\nfunction trim(pattern) {\n  const patternLength = pattern.length;\n  let trimmedPattern = pattern;\n\n  if (patternLength > MAX_PATH_LENGTH) {\n    trimmedPattern = pattern.slice(\n      patternLength - MAX_PATH_LENGTH - 1,\n      patternLength\n    );\n  }\n  return trimmedPattern;\n}\n\nfunction getDirectionsFrom(trimmedPattern) {\n  let count = 0;\n  let stringPath = [];\n  while (count < trimmedPattern.length - 1) {\n    const firstPosition = trimmedPattern[count];\n    const secondPosition = trimmedPattern[count + 1];\n\n    if (firstPosition.y === secondPosition.y) {\n      if (firstPosition.x - secondPosition.x === 1) {\n        stringPath.push(\"Left\");\n      }\n      if (firstPosition.x - secondPosition.x === -1) {\n        stringPath.push(\"Right\");\n      }\n    }\n    if (firstPosition.x === secondPosition.x) {\n      if (firstPosition.y - secondPosition.y === 1) {\n        stringPath.push(\"Up\");\n      }\n      if (firstPosition.y - secondPosition.y === -1) {\n        stringPath.push(\"Down\");\n      }\n    }\n\n    count++;\n  }\n  return stringPath;\n}\n\nexport function getPathFrom(pattern) {\n  const trimmedPattern = trim(pattern);\n  return getDirectionsFrom(trimmedPattern);\n}\n\nexport function userHasBeenActive(gesture, userActive) {\n  return !userActive && !_.isEmpty(gesture);\n}\n\nexport function getNewPattern(input, lastPattern) {\n  let pattern;\n  if (lastPattern.length) {\n    pattern = [...lastPattern, input[1]];\n  } else {\n    pattern = [...lastPattern, input[0], input[1]];\n  }\n  return pattern;\n}\n","import React from \"react\";\nimport GestureInput from \"./gestureInput/GestureInput\";\nimport { validGestures } from \"../gesturesPatterns/gesturePatterns\";\nimport {\n  gestureComboMatched,\n  trimPattern,\n  userHasBeenActive,\n  getNewPattern\n} from \"./GesturePad.helpers\";\nimport {\n  useInterfaceGestureState,\n  useInterfaceGestureDispatch\n} from \"../Interface.customHooks\";\nimport _ from \"lodash\";\n\nfunction GesturePad({ containerProperties }) {\n  const { setGesture, setMode } = useInterfaceGestureDispatch();\n  const { userActive, mode, gesture } = useInterfaceGestureState();\n  const [lastPattern, setLastPattern] = React.useState([]);\n  const [lastMatchedGesture, setLastMatchedGesture] = React.useState([]);\n\n  const inputAdded = input => {\n    const pattern = getNewPattern(input, lastPattern);\n    const gesture = gestureComboMatched(pattern, validGestures, mode);\n\n    if (gesture) {\n      setMode(gesture.type);\n      setGesture({ ...gesture, pattern: trimPattern(pattern, gesture) });\n      setLastMatchedGesture({\n        ...gesture,\n        pattern: trimPattern(pattern, gesture)\n      });\n    }\n    setLastPattern(pattern);\n  };\n\n  React.useEffect(() => {\n    if (userHasBeenActive(gesture, userActive)) {\n      setLastPattern([]);\n      setGesture({});\n    }\n  }, [userActive, gesture]);\n\n  return (\n    <GestureInput\n      updateGestureState={inputAdded}\n      containerProperties={containerProperties}\n      lastMatchedGesture={lastMatchedGesture}\n    />\n  );\n}\n\nexport default GesturePad;\n","import React from \"react\";\nimport styles from \"./Interface.module.css\";\nimport logo from \"../assets/logo.svg\";\nimport Header from \"./header/Header\";\nimport CodeEditor from \"./code/codeEditor/CodeEditor\";\nimport GesturePad from \"./gesturePad/GesturePad\";\nimport { InterfaceGestureProvider } from \"./Interface.gestureContext\";\nimport { InterfaceCountProvider } from \"./Interface.countContext\";\n\nexport default function Interface() {\n  return (\n    <div className={styles.interface}>\n      <img className={styles[\"bg-logo\"]} src={logo} alt=\"\" />\n      <InterfaceCountProvider>\n        <InterfaceGestureProvider>\n          <Header />\n          <section className={styles.view}>\n            <CodeEditor />\n            <GesturePad />\n          </section>\n        </InterfaceGestureProvider>\n      </InterfaceCountProvider>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Interface from \"./interface/Interface\";\nimport { setCSSCustomProperty } from \"./utils\";\nimport { preventRefreshOnMobile } from \"./utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentWillMount() {\n    setCSSCustomProperty();\n    preventRefreshOnMobile();\n  }\n\n  render() {\n    return <Interface />;\n  }\n}\n\nexport default App;\n","export function setCSSCustomProperty() {\n  // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n  let vh = window.innerHeight * 0.01;\n  // Then we set the value in the --vh custom property to the root of the document\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n\nexport function preventRefreshOnMobile() {\n  document.addEventListener(\n    \"touchmove\",\n    function(event) {\n      event.preventDefault();\n    },\n    { passive: false }\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}